install.packages("viridis")
install.packages("ggplot2")
install.packages("smatr")
install.packages("dplyr")
install.packages("broom")
install.packages("tidyr")
install.packages("ggvis")
install.packages("lmodel2")
install.packages("lubridate")
install.packages("bayesplot")
# 1 - Load Libraries ------------------------------------------------------
library("bayesplot")
library("brms")
library("broom")
library("colorspace")
library("cowplot")
library("dplyr")
library("extrafont")
library("forcats")
library("gganimate")
library("ggdist")
library("ggplot2")
library("ggplot2")
library("ggrepel")
library("ggvis")
library("grid")
library("gridExtra")
library("lattice")
library("lme4")
library("lmodel2")
library("lubridate")
library("MASS")
library("modelr")
library("purrr")
library("RColorBrewer")
library("Rcpp")
library("readr")
library("rstan")
library("rstanarm")
library("scales")
library("smatr")
library("tibble")
library("tidybayes")
library("tidyr")
library("tidyselect")
library("viridis")
# 1 - Load Libraries ------------------------------------------------------
library("bayesplot")
library("brms")
library("broom")
library("colorspace")
library("cowplot")
library("dismo")
library("dplyr")
library("extrafont")
library("forcats")
library("gganimate")
library("ggdist")
library("ggmap")
library("ggplot2")
library("ggpubr")
library("ggrepel")
library("ggvis")
library("grid")
library("gridExtra")
library("lattice")
library("lme4")
library("lmodel2")
library("lubridate")
library("maps")
library("mapdata")
library("mapplots")
library("mapproj")
library("maptools")
library("MASS")
library("modelr")
library("patchwork")
library("png")
library("purrr")
library("raster")
library("RColorBrewer")
library("Rcpp")
library("readr")
library("rgdal")
library("rgeos")
library("rmeta")
library("rstan")
library("rstanarm")
library("scales")
library("smatr")
library("tibble")
library("tidybayes")
library("tidyr")
library("tidyselect")
library("viridis")
library(installr)
updateR()
installr::updateR()
# 1 - Load Libraries ------------------------------------------------------
library("bayesplot")
library("brms")
library("broom")
library("colorspace")
library("cowplot")
library("dismo")
library("dplyr")
library("extrafont")
library("forcats")
library("gganimate")
library("ggdist")
library("ggmap")
library("ggplot2")
library("ggpubr")
library("ggrepel")
library("ggvis")
library("grid")
library("gridExtra")
library("lattice")
library("lme4")
library("lmodel2")
library("lubridate")
library("maps")
library("mapdata")
library("mapplots")
library("mapproj")
library("maptools")
library("MASS")
library("modelr")
library("patchwork")
library("png")
library("purrr")
library("raster")
library("RColorBrewer")
library("Rcpp")
library("readr")
library("rgdal")
library("rgeos")
library("rmeta")
library("rstan")
library("rstanarm")
library("scales")
library("smatr")
library("tibble")
library("tidybayes")
library("tidyr")
library("tidyselect")
library("viridis")
install.packages("tidybayes")
## For some reason, the most recent version of brm() does not work in R 4.0.2. Use following code to revert to
## to older version of brm() to make function work
packageurl <- "http://cran.r-project.org/src/contrib/Archive/rstan/rstan_2.19.3.tar.gz"
install.packages(packageurl, repos = NULL, type = "source")
install.packages("bayesplot")
install.packages("brms")
install.packages("broom")
install.packages("colorspace")
install.packages("cowplot")
install.packages("dismo")
install.packages("dplyr")
install.packages("extrafont")
install.packages("forcats")
install.packages("gganimate")
## For some reason, the most recent version of brm() does not work in R 4.0.2. Use following code to revert to
## to older version of brm() to make function work
packageurl <- "http://cran.r-project.org/src/contrib/Archive/rstan/rstan_2.19.3.tar.gz"
install.packages(packageurl, repos = NULL, type = "source")
install.packages("bayesplot")
install.packages("brms")
install.packages("broom")
install.packages("colorspace")
install.packages("cowplot")
install.packages("dismo")
install.packages("dplyr")
install.packages("extrafont")
install.packages("forcats")
install.packages("gganimate")
install.packages("ggdist")
install.packages("ggmap")
install.packages("ggplot2")
install.packages("ggpubr")
install.packages("ggrepel")
install.packages("ggvis")
install.packages("grid")
install.packages("gridExtra")
install.packages("lattice")
install.packages("lme4")
install.packages("lmodel2")
install.packages("lubridate")
install.packages("maps")
install.packages("mapdata")
install.packages("mapplots")
install.packages("mapproj")
install.packages("maptools")
install.packages("MASS")
install.packages("modelr")
install.packages("patchwork")
install.packages("png")
install.packages("purrr")
install.packages("raster")
install.packages("RColorBrewer")
install.packages("Rcpp")
install.packages("readr")
install.packages("rgdal")
install.packages("rgeos")
install.packages("rmeta")
install.packages("rstan")
install.packages("rstanarm")
install.packages("scales")
install.packages("smatr")
install.packages("tibble")
install.packages("tidybayes")
install.packages("tidyr")
install.packages("tidyselect")
install.packages("viridis")
install.packages("broom")
install.packages("colorspace")
install.packages("cowplot")
install.packages("dplyr")
install.packages("ggplot2")
install.packages("grid")
install.packages("purrr")
install.packages("scales")
install.packages("tibble")
install.packages("tidyselect")
install.packages("colorspace")
install.packages("cowplot")
install.packages("dplyr")
install.packages("ggplot2")
install.packages("grid")
install.packages("purrr")
install.packages("scales")
install.packages("tibble")
install.packages("tidyselect")
install.packages("ggplot2")
install.packages("grid")
install.packages("purrr")
install.packages("scales")
install.packages("tibble")
install.packages("tidyselect")
install.packages("tibble")
install.packages("tidyselect")
library("bayesplot")
library("brms")
library("broom")
library("colorspace")
library("cowplot")
library("dismo")
library("dplyr")
library("extrafont")
library("forcats")
library("gganimate")
library("ggdist")
library("ggmap")
library("ggplot2")
library("ggpubr")
library("ggrepel")
library("ggvis")
library("grid")
library("gridExtra")
library("lattice")
library("lme4")
library("lmodel2")
library("lubridate")
library("maps")
library("mapdata")
library("mapplots")
library("mapproj")
library("maptools")
library("MASS")
library("modelr")
library("patchwork")
library("png")
library("purrr")
library("raster")
library("RColorBrewer")
library("Rcpp")
library("readr")
library("rgdal")
library("rgeos")
library("rmeta")
library("rstan")
library("rstanarm")
library("scales")
library("smatr")
library("tibble")
library("tidybayes")
library("tidyr")
library("tidyselect")
library("viridis")
library("bayesplot")
library("brms")
library("broom")
library("colorspace")
library("cowplot")
library("dismo")
library("dplyr")
library("extrafont")
library("forcats")
library("gganimate")
library("ggdist")
library("ggmap")
library("ggplot2")
library("ggpubr")
library("ggrepel")
library("ggvis")
library("grid")
library("gridExtra")
library("lattice")
library("lme4")
library("lmodel2")
library("lubridate")
library("maps")
library("mapdata")
library("mapplots")
library("mapproj")
library("maptools")
library("MASS")
library("modelr")
library("patchwork")
library("png")
library("purrr")
library("raster")
library("RColorBrewer")
library("Rcpp")
library("readr")
library("rgdal")
library("rgeos")
library("rmeta")
library("rstan")
library("rstanarm")
library("scales")
library("smatr")
library("tibble")
library("tidybayes")
library("tidyr")
library("tidyselect")
library("viridis")
library("bayesplot")
library("brms")
library("broom")
library("colorspace")
library("cowplot")
library("dismo")
library("dplyr")
library("extrafont")
library("forcats")
library("gganimate")
library("ggdist")
library("ggmap")
library("ggplot2")
library("ggpubr")
library("ggrepel")
library("ggvis")
library("grid")
library("gridExtra")
library("lattice")
library("lme4")
library("lmodel2")
library("lubridate")
library("maps")
library("mapdata")
library("mapplots")
library("mapproj")
library("maptools")
library("MASS")
library("modelr")
library("patchwork")
library("png")
library("purrr")
library("raster")
library("RColorBrewer")
library("Rcpp")
library("readr")
library("rgdal")
library("rgeos")
library("rmeta")
library("rstan")
library("rstanarm")
library("scales")
library("smatr")
library("tibble")
library("tidybayes")
library("tidyr")
library("tidyselect")
library("viridis")
installr()
updateR()
install.packages("installr")
library(installr)
updateR()
library(dplyr)
# 3 - Read in Data File ---------------------------------------------------
mechaCarMpg_df <- read.csv("../data/MechaCar_mpg.csv")
suspensionCoil_df <- read.csv("../data/Suspension_Coil.csv")
# 4 - Linear Regression to Predict MPG ------------------------------------
# Print output to file instead of console
# sink("mpg_lm_output.txt")
# Write multiple regression to determine if correlation between mpg and other metrics
mpg_lm <- mechaCarMpg_df %>%
lm(formula = mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD)
summary(mpg_lm)
# Return to printing output to console
# sink()
# 5 - Summary Statistics on Suspension Coils ------------------------------
# Retrieve summary statistics for entire Suspension_Coil data set
total_summary <- suspensionCoil_df %>%
summarize(Mean_PSI = mean(PSI),
Median_PSI = median(PSI),
Variance_PSI = var(PSI),
SD_PSI = sd(PSI))
total_summary
# Group data set by lot and retrieve summary statistics
lot_summary <- suspensionCoil_df %>%
group_by(Manufacturing_Lot) %>%
summarize(Mean_PSI = mean(PSI),
Median_PSI = median(PSI),
Variance_PSI = var(PSI),
SD_PSI = sd(PSI),
.groups = 'keep')
lot_summary
# write.csv(total_summary, "total_summary.csv", row.names = FALSE)
# write.csv(lot_summary, "lot_summary.csv", row.names = FALSE)
# 6 - T-Tests on Suspension Coils -----------------------------------------
# Print output to file instead of console
# sink("ttest_output.txt")
# Determine if PSI across all manufacturing lots is statistically different
# from the pop. mean of 1500.
t.test(suspensionCoil_df$PSI, mu = 1500)
# Create subsets of data for each lot
Lot1_df <- suspensionCoil_df %>% filter(Manufacturing_Lot == "Lot1")
Lot2_df <- suspensionCoil_df %>% filter(Manufacturing_Lot == "Lot2")
Lot3_df <- suspensionCoil_df %>% filter(Manufacturing_Lot == "Lot3")
# Determine if PSI of Lot 1 differs from pop. mean of 1500.
t.test(Lot1_df$PSI, mu = 1500)
# Determine if PSI of Lot 2 differs from pop. mean of 1500.
t.test(Lot2_df$PSI, mu = 1500)
# Determine if PSI of Lot 3 differs from pop. mean of 1500.
t.test(Lot3_df$PSI, mu = 1500)
# Return to printing output to console
# sink()
setwd("C:/Users/chris/Desktop/Coding Bootcamp/hw/15/MechaCar_Statistical_Analysis/R")
library(dplyr)
# 3 - Read in Data File ---------------------------------------------------
mechaCarMpg_df <- read.csv("../data/MechaCar_mpg.csv")
suspensionCoil_df <- read.csv("../data/Suspension_Coil.csv")
# 4 - Linear Regression to Predict MPG ------------------------------------
# Print output to file instead of console
# sink("mpg_lm_output.txt")
# Write multiple regression to determine if correlation between mpg and other metrics
mpg_lm <- mechaCarMpg_df %>%
lm(formula = mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD)
summary(mpg_lm)
# Return to printing output to console
# sink()
# 5 - Summary Statistics on Suspension Coils ------------------------------
# Retrieve summary statistics for entire Suspension_Coil data set
total_summary <- suspensionCoil_df %>%
summarize(Mean_PSI = mean(PSI),
Median_PSI = median(PSI),
Variance_PSI = var(PSI),
SD_PSI = sd(PSI))
total_summary
# Group data set by lot and retrieve summary statistics
lot_summary <- suspensionCoil_df %>%
group_by(Manufacturing_Lot) %>%
summarize(Mean_PSI = mean(PSI),
Median_PSI = median(PSI),
Variance_PSI = var(PSI),
SD_PSI = sd(PSI),
.groups = 'keep')
lot_summary
# write.csv(total_summary, "total_summary.csv", row.names = FALSE)
# write.csv(lot_summary, "lot_summary.csv", row.names = FALSE)
# 6 - T-Tests on Suspension Coils -----------------------------------------
# Print output to file instead of console
# sink("ttest_output.txt")
# Determine if PSI across all manufacturing lots is statistically different
# from the pop. mean of 1500.
t.test(suspensionCoil_df$PSI, mu = 1500)
# Create subsets of data for each lot
Lot1_df <- suspensionCoil_df %>% filter(Manufacturing_Lot == "Lot1")
Lot2_df <- suspensionCoil_df %>% filter(Manufacturing_Lot == "Lot2")
Lot3_df <- suspensionCoil_df %>% filter(Manufacturing_Lot == "Lot3")
# Determine if PSI of Lot 1 differs from pop. mean of 1500.
t.test(Lot1_df$PSI, mu = 1500)
# Determine if PSI of Lot 2 differs from pop. mean of 1500.
t.test(Lot2_df$PSI, mu = 1500)
# Determine if PSI of Lot 3 differs from pop. mean of 1500.
t.test(Lot3_df$PSI, mu = 1500)
# Return to printing output to console
# sink()
View(lot_summary)
